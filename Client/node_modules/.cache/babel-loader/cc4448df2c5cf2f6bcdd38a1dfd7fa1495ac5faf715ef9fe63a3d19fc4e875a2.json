{"ast":null,"code":"var _jsxFileName = \"D:\\\\HENRY\\\\rick_and_morty\\\\src\\\\components\\\\Detail.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL_BASE = 'https://be-a-rym.up.railway.app/api/character';\nconst API_KEY = 'ff50319b6c37.e38dfb40ffcaf57ab4aa';\nconst Detail = () => {\n  _s();\n  let {\n    id\n  } = useParams();\n  let [character, setCharacter] = useState({});\n  let [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(true);\n    axios(`${URL_BASE}/${id}?key=${API_KEY}`).then(response => response.data).then(data => {\n      if (data.name) {\n        setCharacter(data);\n        setLoading(false);\n      } else {\n        alert('No hay personajes con ese ID');\n        setLoading(false);\n      }\n    });\n    return setCharacter({});\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ?\n    /*#__PURE__*/\n    // tb se podia hacer un ternario character ? (<h2> Algo <h2>) : \n    _jsxDEV(\"div\", {\n      children: \" Cargandinggg \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [character.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), \"    \", /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: `STATUS | ${character.status}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), \"    \", /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: `GENDER | ${character.species}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: `SPECIE | ${character.gender}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: `ORIGIN | ${character.origin.name}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        width: \"400px\",\n        src: character.image,\n        alt: `Imagen de ${character.name}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Detail, \"5xehfPd0y8SyIEKycXzM1sTSqI4=\", false, function () {\n  return [useParams];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["axios","useParams","useState","useEffect","jsxDEV","_jsxDEV","URL_BASE","API_KEY","Detail","_s","id","character","setCharacter","loading","setLoading","then","response","data","name","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","status","species","gender","origin","width","src","image","alt","_c","$RefreshReg$"],"sources":["D:/HENRY/rick_and_morty/src/components/Detail.jsx"],"sourcesContent":["import axios from \"axios\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useState, useEffect } from \"react\"\r\n\r\nconst URL_BASE = 'https://be-a-rym.up.railway.app/api/character'\r\nconst API_KEY = 'ff50319b6c37.e38dfb40ffcaf57ab4aa'\r\n\r\nconst Detail = () => {\r\n\r\n    let {id} = useParams()\r\n    let [character,setCharacter] = useState({})\r\n    let [loading,setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        axios(`${URL_BASE}/${id}?key=${API_KEY}`) \r\n        .then(response => response.data)\r\n        .then(( data ) => {  \r\n           if (data.name) {\r\n              setCharacter(data)\r\n              setLoading(false)\r\n           } else {\r\n              alert('No hay personajes con ese ID')\r\n              setLoading(false)\r\n           }\r\n        });\r\n        return setCharacter({});\r\n     }, [id]);\r\n    \r\n    return(\r\n        <div>\r\n            {\r\n            loading? (                  // tb se podia hacer un ternario character ? (<h2> Algo <h2>) : \r\n            <div> Cargandinggg </div>\r\n            ) : (\r\n            <div>\r\n                <h1>{character.name} </h1>    {/* O puedo hacer un conditional chaining en cada variable=> {character?.name} */}\r\n                <h3>{`STATUS | ${character.status}`}</h3>    {/* O sino => {character && character.name} */}\r\n                <h3>{`GENDER | ${character.species}`}</h3>\r\n                <h3>{`SPECIE | ${character.gender}`}</h3>\r\n                <h3>{`ORIGIN | ${character.origin.name}`}</h3>\r\n                <img width= '400px' src={character.image} alt={`Imagen de ${character.name}`} />\r\n            </div>\r\n            )\r\n            }\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default Detail"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,QAAQ,GAAG,+CAA+C;AAChE,MAAMC,OAAO,GAAG,mCAAmC;AAEnD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,IAAI;IAACC;EAAE,CAAC,GAAGT,SAAS,EAAE;EACtB,IAAI,CAACU,SAAS,EAACC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC3C,IAAI,CAACW,OAAO,EAACC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACZW,UAAU,CAAC,IAAI,CAAC;IAChBd,KAAK,CAAE,GAAEM,QAAS,IAAGI,EAAG,QAAOH,OAAQ,EAAC,CAAC,CACxCQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAC/BF,IAAI,CAAGE,IAAI,IAAM;MACf,IAAIA,IAAI,CAACC,IAAI,EAAE;QACZN,YAAY,CAACK,IAAI,CAAC;QAClBH,UAAU,CAAC,KAAK,CAAC;MACpB,CAAC,MAAM;QACJK,KAAK,CAAC,8BAA8B,CAAC;QACrCL,UAAU,CAAC,KAAK,CAAC;MACpB;IACH,CAAC,CAAC;IACF,OAAOF,YAAY,CAAC,CAAC,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACF,EAAE,CAAC,CAAC;EAET,oBACIL,OAAA;IAAAe,QAAA,EAEIP,OAAO;IAAA;IAAqB;IAC5BR,OAAA;MAAAe,QAAA,EAAK;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,gBAEzBnB,OAAA;MAAAe,QAAA,gBACIf,OAAA;QAAAe,QAAA,GAAKT,SAAS,CAACO,IAAI,EAAC,GAAC;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,QAAI,eAC9BnB,OAAA;QAAAe,QAAA,EAAM,YAAWT,SAAS,CAACc,MAAO;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,QAAI,eAC7CnB,OAAA;QAAAe,QAAA,EAAM,YAAWT,SAAS,CAACe,OAAQ;MAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAC1CnB,OAAA;QAAAe,QAAA,EAAM,YAAWT,SAAS,CAACgB,MAAO;MAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACzCnB,OAAA;QAAAe,QAAA,EAAM,YAAWT,SAAS,CAACiB,MAAM,CAACV,IAAK;MAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAC9CnB,OAAA;QAAKwB,KAAK,EAAE,OAAO;QAACC,GAAG,EAAEnB,SAAS,CAACoB,KAAM;QAACC,GAAG,EAAG,aAAYrB,SAAS,CAACO,IAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEnF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEC;AAEd,CAAC;AAAAf,EAAA,CAxCKD,MAAM;EAAA,QAEGP,SAAS;AAAA;AAAAgC,EAAA,GAFlBzB,MAAM;AA0CZ,eAAeA,MAAM;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}