{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\HENRY\\\\rick_and_morty\\\\src\\\\components\\\\Cards.jsx\";\nimport React from \"react\";\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = char => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: char.map(_ref => {\n      let {\n        id,\n        name,\n        status,\n        species,\n        gender,\n        origin,\n        image,\n        onClose\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Card, {\n        id: id,\n        status: status,\n        name: name,\n        species: species,\n        gender: gender,\n        origin: origin.name,\n        image: image,\n        onClose: () => alert('Emulamos que se cierra la card')\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 19\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this);\n};\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","Cards","char","children","map","_ref","id","name","status","species","gender","origin","image","onClose","alert","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Desktop/HENRY/rick_and_morty/src/components/Cards.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Card from './Card';\r\n\r\n\r\nconst Cards = (char) => {\r\n   return (\r\n      <div>\r\n         {\r\n            char.map( ({id,name,status,species,gender,origin,image,onClose}) =>{\r\n               return(\r\n                  <Card\r\n                     key={id}\r\n                     id={id}\r\n                     status={status}\r\n                     name={name}\r\n                     species={species}\r\n                     gender={gender}\r\n                     origin={origin.name}\r\n                     image={image}\r\n                     onClose={() => alert('Emulamos que se cierra la card')}\r\n                  />\r\n               )\r\n            })\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Cards"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,KAAK,GAAIC,IAAI,IAAK;EACrB,oBACGF,OAAA;IAAAG,QAAA,EAEMD,IAAI,CAACE,GAAG,CAAEC,IAAA,IAAyD;MAAA,IAAxD;QAACC,EAAE;QAACC,IAAI;QAACC,MAAM;QAACC,OAAO;QAACC,MAAM;QAACC,MAAM;QAACC,KAAK;QAACC;MAAO,CAAC,GAAAR,IAAA;MAC5D,oBACGL,OAAA,CAACF,IAAI;QAEFQ,EAAE,EAAEA,EAAG;QACPE,MAAM,EAAEA,MAAO;QACfD,IAAI,EAAEA,IAAK;QACXE,OAAO,EAAEA,OAAQ;QACjBC,MAAM,EAAEA,MAAO;QACfC,MAAM,EAAEA,MAAM,CAACJ,IAAK;QACpBK,KAAK,EAAEA,KAAM;QACbC,OAAO,EAAEA,CAAA,KAAMC,KAAK,CAAC,gCAAgC;MAAE,GARlDR,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QASR;IAER,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEF;AAEZ,CAAC;AAAAC,EAAA,GAtBKlB,KAAK;AAwBX,eAAeA,KAAK;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}