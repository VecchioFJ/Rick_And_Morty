{"ast":null,"code":"import { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from \"./action-types\";\nconst initialState = {\n  myFavorites: [],\n  // Este es el array que voy pisando \n  allCharactersFav: [] // Este lo uso de base para modificarlo\n};\n\nconst reducer = function () {\n  var _state$myFavorites, _state$myFavorites2, _state$allCharactersF, _state$allCharactersF2;\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case ADD_FAV:\n      return {\n        ...state,\n        myFavorites: [...state.allCharactersFav, payload],\n        allCharactersFav: [...state.allCharactersFav, payload]\n      };\n    case REMOVE_FAV:\n      return {\n        ...state,\n        myFavorites: (_state$myFavorites = state.myFavorites) === null || _state$myFavorites === void 0 ? void 0 : _state$myFavorites.filter(fav => fav.id !== payload),\n        allCharactersFav: (_state$myFavorites2 = state.myFavorites) === null || _state$myFavorites2 === void 0 ? void 0 : _state$myFavorites2.filter(fav => fav.id !== payload)\n      };\n    case FILTER:\n      // const copyAllCharactersFav = state.allCharactersFav        \n      return {\n        ...state,\n        myFavorites: (_state$allCharactersF = state.allCharactersFav) === null || _state$allCharactersF === void 0 ? void 0 : _state$allCharactersF.filter(fav => fav.gender === payload)\n      };\n    case ORDER:\n      // const copyAllCharactersFav = state.allCharactersFav\n      return {\n        ...state,\n        myFavorites: (_state$allCharactersF2 = state.allCharactersFav) === null || _state$allCharactersF2 === void 0 ? void 0 : _state$allCharactersF2.sort((a, b) => payload === 'A' ? b - a : a - b)\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default reducer;","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","FILTER","ORDER","initialState","myFavorites","allCharactersFav","reducer","_state$myFavorites","_state$myFavorites2","_state$allCharactersF","_state$allCharactersF2","state","arguments","length","undefined","type","payload","filter","fav","id","gender","sort","a","b"],"sources":["D:/HENRY/rick_and_morty/Client/src/redux/reducer.js"],"sourcesContent":["import {ADD_FAV, REMOVE_FAV, FILTER, ORDER } from \"./action-types\";\r\n\r\nconst initialState = {\r\n    myFavorites: [], // Este es el array que voy pisando \r\n    allCharactersFav: [], // Este lo uso de base para modificarlo\r\n}\r\n\r\nconst reducer = (state = initialState, {type,payload}) => {\r\n    switch(type) {\r\n\r\n        case ADD_FAV: \r\n            return {\r\n                ...state,\r\n                myFavorites: [...state.allCharactersFav, payload],\r\n                allCharactersFav: [...state.allCharactersFav, payload]\r\n            }\r\n\r\n        case REMOVE_FAV: \r\n            return{\r\n                ...state,\r\n                myFavorites: state.myFavorites?.filter(fav => fav.id !== payload),\r\n                allCharactersFav: state.myFavorites?.filter(fav => fav.id !== payload)\r\n            }    \r\n\r\n        case FILTER: \r\n            // const copyAllCharactersFav = state.allCharactersFav        \r\n            return {\r\n                ...state,\r\n                myFavorites: state.allCharactersFav?.filter(fav => fav.gender === payload),\r\n            }\r\n\r\n        case ORDER: \r\n            // const copyAllCharactersFav = state.allCharactersFav\r\n            return {\r\n                ...state,\r\n                myFavorites: state.allCharactersFav?.sort((a,b) => (payload === 'A' ? b-a : a-b)),\r\n            }\r\n\r\n       \r\n\r\n        default:\r\n            return{...state}        \r\n    }\r\n    \r\n}\r\n\r\nexport default reducer;"],"mappings":"AAAA,SAAQA,OAAO,EAAEC,UAAU,EAAEC,MAAM,EAAEC,KAAK,QAAQ,gBAAgB;AAElE,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EAAE;EACjBC,gBAAgB,EAAE,EAAE,CAAE;AAC1B,CAAC;;AAED,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAA0C;EAAA,IAAAC,kBAAA,EAAAC,mBAAA,EAAAC,qBAAA,EAAAC,sBAAA;EAAA,IAAzCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGT,YAAY;EAAA,IAAE;IAACY,IAAI;IAACC;EAAO,CAAC,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACjD,QAAOC,IAAI;IAEP,KAAKhB,OAAO;MACR,OAAO;QACH,GAAGY,KAAK;QACRP,WAAW,EAAE,CAAC,GAAGO,KAAK,CAACN,gBAAgB,EAAEW,OAAO,CAAC;QACjDX,gBAAgB,EAAE,CAAC,GAAGM,KAAK,CAACN,gBAAgB,EAAEW,OAAO;MACzD,CAAC;IAEL,KAAKhB,UAAU;MACX,OAAM;QACF,GAAGW,KAAK;QACRP,WAAW,GAAAG,kBAAA,GAAEI,KAAK,CAACP,WAAW,cAAAG,kBAAA,uBAAjBA,kBAAA,CAAmBU,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKH,OAAO,CAAC;QACjEX,gBAAgB,GAAAG,mBAAA,GAAEG,KAAK,CAACP,WAAW,cAAAI,mBAAA,uBAAjBA,mBAAA,CAAmBS,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKH,OAAO;MACzE,CAAC;IAEL,KAAKf,MAAM;MACP;MACA,OAAO;QACH,GAAGU,KAAK;QACRP,WAAW,GAAAK,qBAAA,GAAEE,KAAK,CAACN,gBAAgB,cAAAI,qBAAA,uBAAtBA,qBAAA,CAAwBQ,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACE,MAAM,KAAKJ,OAAO;MAC7E,CAAC;IAEL,KAAKd,KAAK;MACN;MACA,OAAO;QACH,GAAGS,KAAK;QACRP,WAAW,GAAAM,sBAAA,GAAEC,KAAK,CAACN,gBAAgB,cAAAK,sBAAA,uBAAtBA,sBAAA,CAAwBW,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAMP,OAAO,KAAK,GAAG,GAAGO,CAAC,GAACD,CAAC,GAAGA,CAAC,GAACC,CAAE;MACpF,CAAC;IAIL;MACI,OAAM;QAAC,GAAGZ;MAAK,CAAC;EAAA;AAG5B,CAAC;AAED,eAAeL,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}